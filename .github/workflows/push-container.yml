on:
  workflow_call:
    inputs:
      containerfile:
        type: string
        default: Containerfile
      image:
        type: string
        required: true
      tag:
        type: string
        default: ${{ github.ref_name }} # git tag or short branch name
      registry_url:
        type: string
        required: true
      registry_username:
        type: string
        required: true
      build_args:
        type: string
        required: false
    secrets:
      registry_password:
        required: true

jobs:
  build-amd64:
    name: Build and Push amd64 Image
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ inputs.image }}
          tags: ${{ inputs.tag }}-amd64
          platforms: linux/amd64
          oci: true
          layers: true
          containerfiles: ${{ inputs.containerfile }}
          build-args: ${{ inputs.build_args }}
      - name: Push To Registry
        id: push-to-registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ inputs.registry_url }}
          username: ${{ inputs.registry_username }}
          password: ${{ secrets.registry_password }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-registry.outputs.registry-paths }}"

  build-arm64:
    name: Build and Push arm64 Image
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ inputs.image }}
          tags: ${{ inputs.tag }}-arm64
          platforms: linux/arm64
          oci: true
          layers: true
          containerfiles: ${{ inputs.containerfile }}
          build-args: ${{ inputs.build_args }}
      - name: Push To Registry
        id: push-to-registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ inputs.registry_url }}
          username: ${{ inputs.registry_username }}
          password: ${{ secrets.registry_password }}
      - name: Print Image URL
        run: echo "Image pushed to ${{ steps.push-to-registry.outputs.registry-paths }}"

  build-manifest:
    name: Create and Push Multi-Arch Manifest
    runs-on: ubuntu-24.04
    needs: [build-amd64, build-arm64]
    steps:
      - name: Create and Push Manifest
        run: |
          REPO=${{ inputs.registry_url }}/${{ inputs.image }}
          buildah manifest create $REPO:${{ inputs.tag }}
          for ARCH in amd64 arm64; do \
            buildah manifest add $REPO:${{ inputs.tag }} docker://$REPO:${{ inputs.tag }}-$ARCH; \
          done
      - name: Push Manifest
        run: |
          REPO=${{ inputs.registry_url }}/${{ inputs.image }}
          CREDS=${{ inputs.registry_username }}:${{ secrets.registry_password }}
          buildah manifest push --all --creds $CREDS $REPO:${{ inputs.tag }}
